FROM ubuntu:latest

ARG GMX_BRANCH
ARG GMX_DOUBLE
ARG PYTHON

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get -q update -y
RUN apt-get -qq install -y make cmake valgrind git g++ libexpat-dev libfftw3-dev libboost-all-dev txt2tags ccache gnuplot python3-numpy python3-numpy ghostscript texlive doxygen vim clang llvm python3-pip python3-lxml transfig wget libhdf5-dev graphviz pkg-config
RUN apt-get -qq install -y texlive-latex-extra psmisc texlive-pstricks libeigen3-dev libxc-dev sudo curl pymol clang-tidy ninja-build libclang-dev llvm-dev python3-sphinx python3-recommonmark

# create cc and c++ (CMake's default compiler) links for ccache
RUN ln -s ../../bin/ccache /usr/lib/ccache/c++
RUN ln -s ../../bin/ccache /usr/lib/ccache/cc

RUN wget -O /usr/bin/codecov https://raw.githubusercontent.com/junghans/codecov-bash/master/codecov
RUN chmod +x /usr/bin/codecov

# install ubuntu's gromacs
RUN if [ -z "${GMX_BRANCH}" ]; then \
  apt-get install -y libgromacs-dev gromacs-openmpi; \
fi

RUN useradd -m -G sudo votca
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
USER votca
ENV PATH=/usr/lib/ccache${PATH:+:}${PATH}
ENV CCACHE_MAXSIZE=250M
ENV DISPLAY=host.docker.internal:0
WORKDIR /home/votca
RUN mkdir .ccache

# create latex.fmt before manual build
# parallel build might trigger a raise condition for non-exisiting latex.fmt when multiple latex get executed
RUN mkdir latex && cd latex && \
printf '\\documentclass{article}\n\\begin{document}\ntest\n\\end{document}' > test.tex && \
latex test.tex && cd .. && rm -rf latex

RUN pip3 install --user coverxygen
# build certain gromacs version as user
RUN if [ -n "${GMX_BRANCH}" ] && [ "${GMX_BRANCH}" != "none" ]; then \
  git clone --depth 1 -b "${GMX_BRANCH}" https://github.com/gromacs/gromacs.git && \
  mkdir gromacs/build && cd gromacs/build && \
  if [ "${GMX_BRANCH}" != release-2019 ]; then \
    gmx_cmake_opts="-DGMX_INSTALL_LEGACY_API=ON"; \
  fi && \
  cmake -DCMAKE_INSTALL_PREFIX=/usr -DGMX_SIMD=SSE2 -DGMX_DOUBLE=${GMX_DOUBLE} ${gmx_cmake_opts} .. && \
  make -j3; \
  sudo make install; \
  cd ../..; \
fi
