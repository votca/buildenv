ARG TAG=latest
FROM registry.fedoraproject.org/fedora:${TAG}

ARG GMX_BRANCH
ARG GMX_DOUBLE
ARG PYTHON=python3.11
ARG INTEL

RUN ( dnf -y update || dnf -y update ) && \
    dnf -y install \
      make cmake valgrind git gcc-c++ expat-devel fftw-devel boost-devel txt2tags ccache procps-ng gnuplot-minimal psmisc vim-minimal clang llvm compiler-rt \
      python-pip python3-lxml python3-numpy wget hdf5-devel lammps eigen3-devel libxc-devel python3-espresso-openmpi sudo curl clang-tools-extra python3-cma \
      ninja-build libomp-devel clang-devel llvm-devel python3-sphinx python3-nbsphinx python3-recommonmark python3-sphinx_rtd_theme python3-ipykernel patch \
      python3-seaborn python3-numpydoc zstd  libint2-devel libecpint-devel doxygen python3-h5py pybind11-devel python3-coverage python3-pytest-cov \
      openmpi-devel boost-python3-devel python-devel boost-openmpi-devel hdf5-openmpi-devel python3-mpi4py-openmpi python-pip vim python-xmltodict python-ase && \
    dnf clean all

RUN source /etc/os-release && if [ "${VERSION_ID}" -le 34 ]; then \
  ( dnf -y update || dnf -y update ) && \
  dnf -y install python3-rdkit && \
  dnf clean all; \
else \
  pip install rdkit; \
fi

# set https://github.com/votca/buildenv/issues/22
RUN alternatives --set gnuplot /usr/bin/gnuplot-minimal

# install fedora's gromacs
RUN if [ -z "${GMX_BRANCH}" ]; then \
  ( dnf -y update || dnf -y update ) && \
  dnf -y install gromacs-devel gromacs gromacs-openmpi && \
  dnf clean all; \
fi

RUN if [ "${INTEL}" = "yes" ]; then \
  printf "[oneAPI]\nname=Intel oneAPI\nbaseurl=https://yum.repos.intel.com/oneapi\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB" > /etc/yum.repos.d/intel-oneapi.repo && \
  ( dnf -y update || dnf -y update ) && \
  dnf -y install intel-oneapi-compiler-dpcpp-cpp intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic intel-oneapi-mkl-devel && \
  dnf clean all; \
fi

RUN useradd -m -G wheel -u 1001 votca
RUN echo '%wheel ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
USER votca
ENV PATH=/usr/lib64/openmpi/bin${PATH:+:}${PATH}
ENV PATH=${INTEL:+/opt/intel/oneapi/compiler/latest/linux/bin:/opt/intel/oneapi/compiler/latest/linux/bin/intel64}${PATH:+:}${PATH}
ENV LD_LIBRARY_PATH=${INTEL:+/opt/intel/oneapi/compiler/latest/linux/compiler/lib/intel64:/opt/intel/oneapi/mkl/latest/lib/intel64/}${LD_LIBRARY_PATH:+:}${LD_LIBRARY_PATH}
RUN XPYTHON=$(basename $(readlink -f /usr/bin/python3)); if [[ ${XPYTHON} != ${PYTHON} ]]; then echo "PYTHON default needs update (is currently ${PYTHON}, but found ${XPYTHON})"; exit 1; fi
ENV PYTHONPATH=/usr/lib64/${PYTHON}/site-packages/openmpi${PYTHONPATH:+:}${PYTHONPATH}
ENV CCACHE_MAXSIZE=250M
WORKDIR /home/votca

# workaround network detection interface in OpenMPI
ENV OMPI_MCA_btl=vader,self
ENV OMPI_MCA_mtl=^ofi

# build certain gromacs version as user
RUN if [ -n "${GMX_BRANCH}" ] && [ "${GMX_BRANCH}" != "none" ]; then \
  git clone --depth 1 -b "${GMX_BRANCH}" https://gitlab.com/gromacs/gromacs.git && \
  if [ "${GMX_BRANCH}" != release-2019 ]; then \
    gmx_cmake_opts="-DGMX_INSTALL_LEGACY_API=ON"; \
  else \
    curl https://gitlab.com/gromacs/gromacs/-/merge_requests/1524.patch | patch -d gromacs -p 1; \
  fi && \
  cmake -GNinja -S gromacs -B gromacs/build -DCMAKE_INSTALL_PREFIX=/usr -DGMX_SIMD=SSE2 -DGMX_DOUBLE=${GMX_DOUBLE} ${gmx_cmake_opts} && \
  cmake --build gromacs/build && \
  sudo cmake --install gromacs/build; \
fi

RUN git clone https://github.com/espressopp/espressopp && \
  cmake -S espressopp -B espressopp/build -DCMAKE_INSTALL_PREFIX=/usr && \
  cmake --build espressopp/build && \
  sudo cmake --install espressopp/build && \  
  sudo pip3 install pyh5md && \
  ${PYTHON} -c "import espressopp"
